var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactRouterDom = require("react-router-dom");
  var _reactRedux = require('react-redux');
  var _actionsActions = require('../../actions/actions');
  var _moviesListMoviesList = require('../movies-list/movies-list');
  var _moviesListMoviesListDefault = _parcelHelpers.interopDefault(_moviesListMoviesList);
  require('./main-view.scss');
  var _loginViewLoginView = require("../login-view/login-view");
  var _registrationViewRegistrationView = require("../registration-view/registration-view");
  require("../movie-card/movie-card");
  var _movieViewMovieView = require("../movie-view/movie-view");
  var _reactBootstrap = require("react-bootstrap");
  var _directorViewDirectorView = require("../director-view/director-view");
  var _genreViewGenreView = require("../genre-view/genre-view");
  var _profileViewProfileView = require("../profile-view/profile-view");
  var _updateViewUpdateView = require('../update-view/update-view');
  var _aboutAbout = require('../about/about');
  var _jsxFileName = "/Users/will/Library/Mobile Documents/com~apple~CloudDocs/Desktop/CareerFoundry/myFlix-Client/src/components/main-view/main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        // movies: [],
        user: null,
        selectedMovie: null
      };
    }
    setSelectedMovie(newSelectedMovie) {
      this.setState({
        selectedMovie: newSelectedMovie
      });
    }
    /*src/components/main-view/main-view.jsx*/
    onLoggedIn(authData) {
      console.log(authData);
      this.setState({
        user: authData.user.Username
      });
      localStorage.setItem("token", authData.token);
      localStorage.setItem("user", authData.user.Username);
      this.getMovies(authData.token);
    }
    onRegister(register) {
      this.setState({
        register
      });
    }
    /*src/components/main-view/main-view.jsx*/
    getMovies(token) {
      _axiosDefault.default.get("https://willsmovies.herokuapp.com/movies", {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        // Assign the result to the state
        this.props.setMovies(response.data);
      }).catch(function (error) {
        console.log(error);
      });
    }
    /*src/components/main-view/main-view.jsx*/
    componentDidMount() {
      let accessToken = localStorage.getItem("token");
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem("user")
        });
        this.getMovies(accessToken);
      }
    }
    logOut() {
      localStorage.removeItem("token");
      localStorage.removeItem("user");
      this.setState({
        user: null
      });
    }
    render() {
      let {movies} = this.props;
      let {user} = this.state;
      // const { movies, selectedMovie, user, register } = this.state;
      /*If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView*/
      // if (!user)
      // return <LoginView onLoggedIn={(user) => this.onLoggedIn(user)} />;
      // // Before the movies have been loaded
      // if (movies.length === 0) return <div className="main-view" />;
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 111,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "navbar-container",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 112,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar, {
          bg: "light",
          expand: "lg",
          sticky: "top",
          variant: "dark",
          expand: "lg",
          className: "navbar shadow-sm mb-5",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 113,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Brand, {
          href: "http://localhost:1234",
          className: "navbar-brand",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 121,
            columnNumber: 13
          }
        }, "FlixNET"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Toggle, {
          "aria-controls": "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 124,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Navbar.Collapse, {
          className: "justify-content-end",
          id: "basic-navbar-nav",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 125,
            columnNumber: 13
          }
        }, !user ? /*#__PURE__*/_reactDefault.default.createElement("ul", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 131,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 132,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "link",
          className: "navbar-link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 133,
            columnNumber: 21
          }
        }, "Sign In")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/register`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 137,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "link",
          className: "navbar-link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 138,
            columnNumber: 21
          }
        }, "Register"))) : /*#__PURE__*/_reactDefault.default.createElement("ul", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 144,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 145,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "dark",
          className: "navbar-link",
          onClick: () => this.logOut(),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 146,
            columnNumber: 21
          }
        }, "Sign Out")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/users/${user}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 154,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "dark",
          className: "navbar-link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 155,
            columnNumber: 21
          }
        }, "My Account")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 159,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "dark",
          className: "navbar-link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 160,
            columnNumber: 21
          }
        }, "Movies")), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
          to: `/about`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 164,
            columnNumber: 19
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "dark",
          className: "navbar-link",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 165,
            columnNumber: 21
          }
        }, "About")))))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Row, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 174,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 181,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 182,
                  columnNumber: 21
                }
              }))
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_moviesListMoviesListDefault.default, {
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 185,
                  columnNumber: 24
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 175,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 197,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 198,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 193,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match, history}) => {
            return (
              /*#__PURE__*/
              // <Col md={8}>
              _reactDefault.default.createElement(_movieViewMovieView.MovieView, {
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 210,
                  columnNumber: 19
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 205,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match}) => {
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 222,
                  columnNumber: 47
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 224,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorView.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name),
                onBackClick: () => window.history.back(),
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 225,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 219,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match}) => {
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 239,
                  columnNumber: 47
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 241,
                  columnNumber: 17
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreView.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name),
                onBackClick: () => window.history.back(),
                movies: movies,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 242,
                  columnNumber: 19
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 236,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/about",
          render: () => /*#__PURE__*/_reactDefault.default.createElement(_aboutAbout.About, {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 256,
              columnNumber: 27
            }
          }),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 253,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/users/:userId",
          render: () => /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileView.ProfileView, {
            movies: movies,
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 261,
              columnNumber: 27
            }
          }),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 258,
            columnNumber: 11
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/update/:userId",
          render: () => {
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_updateViewUpdateView.UpdateView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 266,
                  columnNumber: 22
                }
              })
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 263,
            columnNumber: 11
          }
        })))
      );
    }
  }
  let mapStateToProps = state => {
    return {
      movies: state.movies
    };
  };
  exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actionsActions.setMovies
  })(MainView);
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
