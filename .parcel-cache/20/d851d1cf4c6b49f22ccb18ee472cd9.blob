var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "UpdateView", function () {
    return UpdateView;
  });
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactBootstrapForm = require("react-bootstrap/Form");
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require("react-bootstrap/Button");
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  var _reactBootstrapContainer = require("react-bootstrap/Container");
  var _reactBootstrapContainerDefault = _parcelHelpers.interopDefault(_reactBootstrapContainer);
  var _reactRouterDom = require("react-router-dom");
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _jsxFileName = "/Users/will/Library/Mobile Documents/com~apple~CloudDocs/Desktop/CareerFoundry/myFlix-Client/src/components/update-view/update-view.jsx", _s = $RefreshSig$();
  function UpdateView(props) {
    _s();
    const [username, setUsername] = _react.useState("");
    const [password, setPassword] = _react.useState("");
    const [email, setEmail] = _react.useState("");
    const [birthday, setBirthday] = _react.useState("");
    const [usernameErr, setUsernameErr] = _react.useState({});
    const [passwordErr, setPasswordErr] = _react.useState({});
    const [emailErr, setEmailErr] = _react.useState({});
    const handleUpdate = e => {
      e.preventDefault();
      const isValid = formValidation();
      const url = "https://willsmovies.herokuapp.com/users/" + localStorage.getItem("user");
      if (isValid) {
        _axiosDefault.default.put(url, {
          Username: username,
          Password: password,
          Email: email,
          Birthday: birthday
        }, {
          headers: {
            Authorization: "Bearer " + localStorage.getItem("token")
          }
        }).then(response => {
          const data = response.data;
          console.log(data);
          localStorage.setItem("user", data.Username);
          // props.setUsername(data.Username);
          alert("Your profile was updated successfully");
          window.open("/", "_self");
        }).catch(e => {
          console.log(e);
          alert(e);
        });
      }
    };
    const formValidation = () => {
      const usernameErr = {};
      const passwordErr = {};
      const emailErr = {};
      let isValid = true;
      if (username.trim().length < 5) {
        usernameErr.usernameShort = "Username must be at least 5 characters";
        isValid = false;
      }
      if (password.trim().length < 1) {
        passwordErr.passwordMissing = "You must enter a password";
        isValid = false;
      }
      if (!email.includes(".") && !email.includes("@")) {
        emailErr.emailNotEmail = "A valid email address is required";
        isValid = false;
      }
      setUsernameErr(usernameErr);
      setPasswordErr(passwordErr);
      setEmailErr(emailErr);
      return isValid;
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapContainerDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 86,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 7
        }
      }, "Update your account"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
        className: "registration-form",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 88,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formBasicUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 89,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 90,
          columnNumber: 11
        }
      }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        value: username,
        placeholder: "Enter username",
        required: true,
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 91,
          columnNumber: 11
        }
      }), Object.keys(usernameErr).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 100,
              columnNumber: 15
            }
          }, usernameErr[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formBasicPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 107,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 108,
          columnNumber: 11
        }
      }, "Password:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "password",
        value: password,
        placeholder: "Enter password",
        required: true,
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 109,
          columnNumber: 11
        }
      }), Object.keys(passwordErr).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 118,
              columnNumber: 15
            }
          }, passwordErr[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formBasicEmail",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 125,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 126,
          columnNumber: 11
        }
      }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "email",
        value: email,
        placeholder: "name@example.com",
        required: true,
        onChange: e => setEmail(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 127,
          columnNumber: 11
        }
      }), Object.keys(emailErr).map(key => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("div", {
            key: key,
            style: {
              color: "red"
            },
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 136,
              columnNumber: 15
            }
          }, emailErr[key])
        );
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formBasicDate",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 143,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 144,
          columnNumber: 11
        }
      }, "Birth Date:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "date",
        value: birthday,
        placeholder: "Select Birthday",
        required: true,
        onChange: e => setBirthday(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 145,
          columnNumber: 11
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Link, {
        to: `/users/`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 154,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "btn-lg btn-dark btn-block",
        type: "submit",
        onClick: handleUpdate,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 155,
          columnNumber: 11
        }
      }, "Update"))))
    );
  }
  _s(UpdateView, "FEfcSNINgXDNtWgmiLtUuJAZrDQ=");
  _c = UpdateView;
  var _c;
  $RefreshReg$(_c, "UpdateView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
